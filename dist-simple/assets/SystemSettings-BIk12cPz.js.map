{"version":3,"file":"SystemSettings-BIk12cPz.js","sources":["../../node_modules/lucide-react/dist/esm/icons/save.js","../../node_modules/@radix-ui/react-switch/dist/index.mjs","../../src/components/ui/switch.tsx","../../src/components/SystemSettings.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Save = createLucideIcon(\"Save\", [\n  [\n    \"path\",\n    {\n      d: \"M15.2 3a2 2 0 0 1 1.4.6l3.8 3.8a2 2 0 0 1 .6 1.4V19a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2z\",\n      key: \"1c8476\"\n    }\n  ],\n  [\"path\", { d: \"M17 21v-7a1 1 0 0 0-1-1H8a1 1 0 0 0-1 1v7\", key: \"1ydtos\" }],\n  [\"path\", { d: \"M7 3v4a1 1 0 0 0 1 1h7\", key: \"t51u73\" }]\n]);\n\nexport { Save as default };\n//# sourceMappingURL=save.js.map\n","\"use client\";\n\n// src/switch.tsx\nimport * as React from \"react\";\nimport { composeEventHandlers } from \"@radix-ui/primitive\";\nimport { useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport { createContextScope } from \"@radix-ui/react-context\";\nimport { useControllableState } from \"@radix-ui/react-use-controllable-state\";\nimport { usePrevious } from \"@radix-ui/react-use-previous\";\nimport { useSize } from \"@radix-ui/react-use-size\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar SWITCH_NAME = \"Switch\";\nvar [createSwitchContext, createSwitchScope] = createContextScope(SWITCH_NAME);\nvar [SwitchProvider, useSwitchContext] = createSwitchContext(SWITCH_NAME);\nvar Switch = React.forwardRef(\n  (props, forwardedRef) => {\n    const {\n      __scopeSwitch,\n      name,\n      checked: checkedProp,\n      defaultChecked,\n      required,\n      disabled,\n      value = \"on\",\n      onCheckedChange,\n      form,\n      ...switchProps\n    } = props;\n    const [button, setButton] = React.useState(null);\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setButton(node));\n    const hasConsumerStoppedPropagationRef = React.useRef(false);\n    const isFormControl = button ? form || !!button.closest(\"form\") : true;\n    const [checked, setChecked] = useControllableState({\n      prop: checkedProp,\n      defaultProp: defaultChecked ?? false,\n      onChange: onCheckedChange,\n      caller: SWITCH_NAME\n    });\n    return /* @__PURE__ */ jsxs(SwitchProvider, { scope: __scopeSwitch, checked, disabled, children: [\n      /* @__PURE__ */ jsx(\n        Primitive.button,\n        {\n          type: \"button\",\n          role: \"switch\",\n          \"aria-checked\": checked,\n          \"aria-required\": required,\n          \"data-state\": getState(checked),\n          \"data-disabled\": disabled ? \"\" : void 0,\n          disabled,\n          value,\n          ...switchProps,\n          ref: composedRefs,\n          onClick: composeEventHandlers(props.onClick, (event) => {\n            setChecked((prevChecked) => !prevChecked);\n            if (isFormControl) {\n              hasConsumerStoppedPropagationRef.current = event.isPropagationStopped();\n              if (!hasConsumerStoppedPropagationRef.current) event.stopPropagation();\n            }\n          })\n        }\n      ),\n      isFormControl && /* @__PURE__ */ jsx(\n        SwitchBubbleInput,\n        {\n          control: button,\n          bubbles: !hasConsumerStoppedPropagationRef.current,\n          name,\n          value,\n          checked,\n          required,\n          disabled,\n          form,\n          style: { transform: \"translateX(-100%)\" }\n        }\n      )\n    ] });\n  }\n);\nSwitch.displayName = SWITCH_NAME;\nvar THUMB_NAME = \"SwitchThumb\";\nvar SwitchThumb = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeSwitch, ...thumbProps } = props;\n    const context = useSwitchContext(THUMB_NAME, __scopeSwitch);\n    return /* @__PURE__ */ jsx(\n      Primitive.span,\n      {\n        \"data-state\": getState(context.checked),\n        \"data-disabled\": context.disabled ? \"\" : void 0,\n        ...thumbProps,\n        ref: forwardedRef\n      }\n    );\n  }\n);\nSwitchThumb.displayName = THUMB_NAME;\nvar BUBBLE_INPUT_NAME = \"SwitchBubbleInput\";\nvar SwitchBubbleInput = React.forwardRef(\n  ({\n    __scopeSwitch,\n    control,\n    checked,\n    bubbles = true,\n    ...props\n  }, forwardedRef) => {\n    const ref = React.useRef(null);\n    const composedRefs = useComposedRefs(ref, forwardedRef);\n    const prevChecked = usePrevious(checked);\n    const controlSize = useSize(control);\n    React.useEffect(() => {\n      const input = ref.current;\n      if (!input) return;\n      const inputProto = window.HTMLInputElement.prototype;\n      const descriptor = Object.getOwnPropertyDescriptor(\n        inputProto,\n        \"checked\"\n      );\n      const setChecked = descriptor.set;\n      if (prevChecked !== checked && setChecked) {\n        const event = new Event(\"click\", { bubbles });\n        setChecked.call(input, checked);\n        input.dispatchEvent(event);\n      }\n    }, [prevChecked, checked, bubbles]);\n    return /* @__PURE__ */ jsx(\n      \"input\",\n      {\n        type: \"checkbox\",\n        \"aria-hidden\": true,\n        defaultChecked: checked,\n        ...props,\n        tabIndex: -1,\n        ref: composedRefs,\n        style: {\n          ...props.style,\n          ...controlSize,\n          position: \"absolute\",\n          pointerEvents: \"none\",\n          opacity: 0,\n          margin: 0\n        }\n      }\n    );\n  }\n);\nSwitchBubbleInput.displayName = BUBBLE_INPUT_NAME;\nfunction getState(checked) {\n  return checked ? \"checked\" : \"unchecked\";\n}\nvar Root = Switch;\nvar Thumb = SwitchThumb;\nexport {\n  Root,\n  Switch,\n  SwitchThumb,\n  Thumb,\n  createSwitchScope\n};\n//# sourceMappingURL=index.mjs.map\n","import * as React from \"react\"\r\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Switch = React.forwardRef<\r\n  React.ElementRef<typeof SwitchPrimitives.Root>,\r\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\r\n>(({ className, ...props }, ref) => (\r\n  <SwitchPrimitives.Root\r\n    className={cn(\r\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\r\n      className\r\n    )}\r\n    {...props}\r\n    ref={ref}\r\n  >\r\n    <SwitchPrimitives.Thumb\r\n      className={cn(\r\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\r\n      )}\r\n    />\r\n  </SwitchPrimitives.Root>\r\n))\r\nSwitch.displayName = SwitchPrimitives.Root.displayName\r\n\r\nexport { Switch }\r\n","import React, { useState, useEffect, useCallback, useMemo } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { Save, Settings, ArrowLeft } from 'lucide-react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Switch } from '@/components/ui/switch';\r\nimport { toast } from '@/hooks/use-toast';\r\nimport { supabase } from '@/integrations/supabase/client';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\ninterface SystemSetting {\r\n  key: string;\r\n  value: any;\r\n  description: string;\r\n  type: 'string' | 'number' | 'boolean' | 'json';\r\n}\r\n\r\nconst SystemSettings: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const [_settings, setSettings] = useState<Record<string, any>>({});\r\n  const [_loading, setLoading] = useState(true);\r\n  const [saving, setSaving] = useState(false);\r\n  const [localSettings, setLocalSettings] = useState<Record<string, any>>({});\r\n\r\n  // Safe settings that can be edited\r\n  const editableSettings: SystemSetting[] = useMemo(() => [\r\n    {\r\n      key: 'site_name',\r\n      value: 'RP Cars',\r\n      description: 'The name of the website',\r\n      type: 'string'\r\n    },\r\n    {\r\n      key: 'site_description',\r\n      value: 'Premium car rental service in India',\r\n      description: 'Site description for SEO',\r\n      type: 'string'\r\n    },\r\n    {\r\n      key: 'contact_email',\r\n      value: 'support@rpcars.in',\r\n      description: 'Primary contact email',\r\n      type: 'string'\r\n    },\r\n    {\r\n      key: 'contact_phone',\r\n      value: '+91 9876543210',\r\n      description: 'Primary contact phone number',\r\n      type: 'string'\r\n    },\r\n    {\r\n      key: 'maintenance_mode',\r\n      value: false,\r\n      description: 'Enable maintenance mode',\r\n      type: 'boolean'\r\n    },\r\n    {\r\n      key: 'max_booking_days',\r\n      value: 30,\r\n      description: 'Maximum days a car can be booked',\r\n      type: 'number'\r\n    },\r\n    {\r\n      key: 'default_service_charge',\r\n      value: 500,\r\n      description: 'Default service charge in INR paise',\r\n      type: 'number'\r\n    }\r\n  ], []);\r\n\r\n  const fetchSettings = useCallback(async () => {\r\n    try {\r\n      // Initialize with default values\r\n      const _settings: Record<string, any> = {};\r\n      editableSettings.forEach(setting => {\r\n        _settings[setting.key] = setting.value;\r\n      });\r\n      \r\n      // Fetch actual settings from database\r\n      const { data, error } = await supabase\r\n        .from('system_settings')\r\n        .select('*');\r\n        \r\n      if (error) {\r\n        console.warn('No system settings found, using defaults:', error);\r\n        // Continue with default values if no settings exist\r\n      } else {\r\n        // Override defaults with actual values\r\n        (data as any)?.forEach((row: any) => {\r\n          try {\r\n            _settings[(row as any).key] = JSON.parse((row as any).value);\r\n          } catch {\r\n            _settings[(row as any).key] = (row as any).value;\r\n          }\r\n        });\r\n      }\r\n      \r\n      setSettings(_settings);\r\n      setLocalSettings(_settings);\r\n    } catch (error) {\r\n      console.error('Error fetching settings:', error);\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"Failed to load system settings\",\r\n        variant: \"destructive\",\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [editableSettings]);\r\n\r\n  useEffect(() => {\r\n    fetchSettings();\r\n  }, [fetchSettings]);\r\n\r\n  const handleSaveSettings = async () => {\r\n    setSaving(true);\r\n    \r\n    try {\r\n      // Save each setting to database\r\n      for (const key of Object.keys(localSettings)) {\r\n        const setting = editableSettings.find(s => s.key === key);\r\n        let value = localSettings[key];\r\n        \r\n        // Convert to appropriate type\r\n        if (setting?.type === 'number') {\r\n          value = Number(value);\r\n        } else if (setting?.type === 'boolean') {\r\n          value = Boolean(value);\r\n        }\r\n        \r\n        const { error } = await (supabase\r\n          .from('system_settings') as any)\r\n          .upsert({\r\n            key,\r\n            value: JSON.stringify(value),\r\n            updated_at: new Date().toISOString()\r\n          }, {\r\n            onConflict: 'key'\r\n          });\r\n          \r\n        if (error) {throw error;}\r\n      }\r\n      \r\n      // Update local state\r\n      setSettings(localSettings);\r\n      \r\n      toast({\r\n        title: \"Settings Saved\",\r\n        description: \"System settings have been updated successfully\",\r\n      });\r\n      \r\n      // Log audit entry\r\n      try {\r\n        await logAuditAction('settings_update', 'System settings updated');\r\n      } catch (auditError) {\r\n        console.warn('Failed to log audit action:', auditError);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error saving settings:', error);\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"Failed to save system settings\",\r\n        variant: \"destructive\",\r\n      });\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  const logAuditAction = async (action: string, description: string, metadata?: any) => {\r\n    try {\r\n      const {\r\n        data: { user }\r\n      } = await supabase.auth.getUser();\r\n      \r\n      // Insert audit log entry\r\n      const { error } = await (supabase\r\n        .from('audit_logs') as any)\r\n        .insert({\r\n          action,\r\n          description,\r\n          user_id: user?.id,\r\n          metadata: {\r\n            ...metadata,\r\n            timestamp: new Date().toISOString()\r\n          }\r\n        });\r\n      \r\n      if (error) {\r\n        console.error('Error logging audit action:', error);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error logging audit action:', error);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (key: string, value: any) => {\r\n    setLocalSettings(prev => ({\r\n      ...prev,\r\n      [key]: value\r\n    }));\r\n  };\r\n\r\n  if (_loading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center p-8\">\r\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center gap-4\">\r\n        <Button \r\n          variant=\"outline\" \r\n          size=\"icon\" \r\n          onClick={() => navigate('/admin')}\r\n          className=\"hover:bg-primary hover:text-primary-foreground transition-colors\"\r\n        >\r\n          <ArrowLeft className=\"h-4 w-4\" />\r\n        </Button>\r\n        <div>\r\n          <h2 className=\"text-2xl font-bold\">System Settings</h2>\r\n          <p className=\"text-muted-foreground\">\r\n            Configure global system settings\r\n          </p>\r\n        </div>\r\n      </div>\r\n      \r\n      {/* Settings Form */}\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Configuration</CardTitle>\r\n        </CardHeader>\r\n        <CardContent className=\"space-y-6\">\r\n          {editableSettings.map((setting) => (\r\n            <motion.div\r\n              key={setting.key}\r\n              initial={{ opacity: 0, y: 20 }}\r\n              animate={{ opacity: 1, y: 0 }}\r\n              className=\"flex flex-col md:flex-row items-start md:items-center gap-4 p-4 border rounded-lg\"\r\n            >\r\n              <div className=\"flex-1\">\r\n                <Label className=\"font-medium\">{setting.key}</Label>\r\n                <p className=\"text-sm text-muted-foreground mt-1\">\r\n                  {setting.description}\r\n                </p>\r\n              </div>\r\n              \r\n              <div className=\"w-full md:w-64\">\r\n                {setting.type === 'boolean' ? (\r\n                  <Switch\r\n                    checked={localSettings[setting.key] ?? setting.value}\r\n                    onCheckedChange={(checked) => handleInputChange(setting.key, checked)}\r\n                  />\r\n                ) : setting.type === 'number' ? (\r\n                  <Input\r\n                    type=\"number\"\r\n                    value={localSettings[setting.key] ?? setting.value}\r\n                    onChange={(e) => handleInputChange(setting.key, e.target.value)}\r\n                  />\r\n                ) : (\r\n                  <Input\r\n                    value={localSettings[setting.key] ?? setting.value}\r\n                    onChange={(e) => handleInputChange(setting.key, e.target.value)}\r\n                  />\r\n                )}\r\n              </div>\r\n            </motion.div>\r\n          ))}\r\n          \r\n          <div className=\"flex justify-end pt-4 border-t\">\r\n            <Button\r\n              onClick={handleSaveSettings}\r\n              disabled={saving}\r\n              className=\"flex items-center gap-2\"\r\n            >\r\n              {saving ? (\r\n                <>\r\n                  <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white\"></div>\r\n                  Saving...\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <Save className=\"w-4 h-4\" />\r\n                  Save Settings\r\n                </>\r\n              )}\r\n            </Button>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n      \r\n      {/* Info Card */}\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle className=\"flex items-center gap-2\">\r\n            <Settings className=\"w-5 h-5\" />\r\n            About System Settings\r\n          </CardTitle>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <p className=\"text-muted-foreground\">\r\n            These settings control the global behavior of the RP Cars system. \r\n            Changes take effect immediately across the entire application.\r\n          </p>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SystemSettings;"],"names":["Save","createLucideIcon","SWITCH_NAME","createSwitchContext","createContextScope","SwitchProvider","useSwitchContext","Switch","React.forwardRef","props","forwardedRef","__scopeSwitch","name","checkedProp","defaultChecked","required","disabled","value","onCheckedChange","form","switchProps","button","setButton","React.useState","composedRefs","useComposedRefs","node","hasConsumerStoppedPropagationRef","React.useRef","isFormControl","checked","setChecked","useControllableState","jsxs","jsx","Primitive","getState","composeEventHandlers","event","prevChecked","SwitchBubbleInput","THUMB_NAME","SwitchThumb","thumbProps","context","BUBBLE_INPUT_NAME","control","bubbles","ref","usePrevious","controlSize","useSize","React.useEffect","input","inputProto","Root","Thumb","className","SwitchPrimitives.Root","cn","SwitchPrimitives.Thumb","SystemSettings","navigate","useNavigate","_settings","setSettings","useState","_loading","setLoading","saving","setSaving","localSettings","setLocalSettings","editableSettings","useMemo","fetchSettings","useCallback","setting","data","error","supabase","row","toast","useEffect","handleSaveSettings","key","s","logAuditAction","auditError","action","description","metadata","user","handleInputChange","prev","Button","ArrowLeft","Card","CardHeader","CardTitle","CardContent","motion","Label","Input","e","Fragment","Settings"],"mappings":"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","x_google_ignoreList":[0,1]}