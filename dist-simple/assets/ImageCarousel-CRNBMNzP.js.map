{"version":3,"file":"ImageCarousel-CRNBMNzP.js","sources":["../../src/components/ImageCarousel.tsx"],"sourcesContent":["import { useState } from 'react';\r\nimport SimpleImage from '@/components/SimpleImage';\r\n\r\nexport default function ImageCarousel({ images = [], className = '', debug = false }: { images?: string[], className?: string, debug?: boolean }) {\r\n  const [idx, setIdx] = useState(0);\r\n  \r\n  // Only show debug info in development mode\r\n  const showDebug = debug && import.meta.env.DEV;\r\n  \r\n  if (showDebug) {\r\n    console.log('ImageCarousel - Received images:', images);\r\n  }\r\n  \r\n  // Handle null/undefined images array\r\n  const validImages = images && Array.isArray(images) ? images.filter(img => img && typeof img === 'string') : [];\r\n  \r\n  if (validImages.length === 0) {\r\n    if (showDebug) {\r\n      console.log('ImageCarousel - No valid images found, showing fallback');\r\n    }\r\n    return <div className={`bg-gray-100 ${className}`} style={{ minHeight: 160 }}>No image</div>;\r\n  }\r\n  \r\n  const next = () => setIdx(i => (i + 1) % validImages.length);\r\n  const prev = () => setIdx(i => (i - 1 + validImages.length) % validImages.length);\r\n\r\n  // Handle touch events for mobile swipe\r\n  const handleTouchStart = (e: React.TouchEvent) => {\r\n    const touchStartX = e.touches[0].clientX;\r\n    \r\n    const handleTouchMove = (moveEvent: TouchEvent) => {\r\n      const touchMoveX = moveEvent.touches[0].clientX;\r\n      const diff = touchStartX - touchMoveX;\r\n      \r\n      // Minimum swipe distance to trigger navigation\r\n      if (Math.abs(diff) > 50) {\r\n        if (diff > 0) {\r\n          next(); // Swipe left - next image\r\n        } else {\r\n          prev(); // Swipe right - previous image\r\n        }\r\n        \r\n        // Remove event listeners after swipe\r\n        document.removeEventListener('touchmove', handleTouchMove);\r\n        document.removeEventListener('touchend', handleTouchEnd);\r\n      }\r\n    };\r\n    \r\n    const handleTouchEnd = () => {\r\n      document.removeEventListener('touchmove', handleTouchMove);\r\n      document.removeEventListener('touchend', handleTouchEnd);\r\n    };\r\n    \r\n    // Add event listeners for touch move and end\r\n    document.addEventListener('touchmove', handleTouchMove, { passive: false });\r\n    document.addEventListener('touchend', handleTouchEnd, { passive: false });\r\n  };\r\n\r\n  return (\r\n    <div className={`relative ${className}`} onTouchStart={handleTouchStart}>\r\n      <SimpleImage \r\n        src={validImages[idx]} \r\n        alt={`Car image ${idx + 1}`} \r\n        className=\"w-full aspect-video object-cover rounded\" \r\n      />\r\n      {validImages.length > 1 && (\r\n        <>\r\n          <button \r\n            onClick={prev} \r\n            aria-label=\"Previous\" \r\n            className=\"absolute left-2 top-1/2 transform -translate-y-1/2 bg-white/70 rounded-full p-2 shadow-md hover:bg-white transition-all active:scale-95 sm:p-1\"\r\n          >\r\n            <span className=\"text-gray-800 text-lg font-bold sm:text-base\">‹</span>\r\n          </button>\r\n          <button \r\n            onClick={next} \r\n            aria-label=\"Next\" \r\n            className=\"absolute right-2 top-1/2 transform -translate-y-1/2 bg-white/70 rounded-full p-2 shadow-md hover:bg-white transition-all active:scale-95 sm:p-1\"\r\n          >\r\n            <span className=\"text-gray-800 text-lg font-bold sm:text-base\">›</span>\r\n          </button>\r\n          <div className=\"flex gap-1 sm:gap-2 justify-center mt-2\">\r\n            {validImages.map((_, i) => (\r\n              <button \r\n                key={i} \r\n                onClick={() => setIdx(i)} \r\n                className={`w-2 h-2 sm:w-3 sm:h-3 rounded-full transition-all ${i === idx ? 'bg-primary scale-125' : 'bg-gray-300'}`}\r\n                aria-label={`Go to image ${i + 1}`}\r\n              />\r\n            ))}\r\n          </div>\r\n        </>\r\n      )}\r\n      {showDebug && (\r\n        <div className=\"mt-2 text-xs p-2 bg-gray-100 break-all\">\r\n          <strong>Current Image URL:</strong> {validImages[idx]}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}"],"names":["ImageCarousel","images","className","debug","idx","setIdx","useState","showDebug","validImages","img","jsx","next","i","prev","handleTouchStart","e","touchStartX","handleTouchMove","moveEvent","touchMoveX","diff","handleTouchEnd","SimpleImage","jsxs","Fragment","_"],"mappings":"6FAGA,SAAwBA,EAAc,CAAE,OAAAC,EAAS,CAAA,EAAI,UAAAC,EAAY,GAAI,MAAAC,EAAQ,IAAqE,CAChJ,KAAM,CAACC,EAAKC,CAAM,EAAIC,EAAAA,SAAS,CAAC,EAG1BC,EAAYJ,GAAS,GAOrBK,EAAcP,GAAU,MAAM,QAAQA,CAAM,EAAIA,EAAO,OAAOQ,GAAOA,GAAO,OAAOA,GAAQ,QAAQ,EAAI,CAAA,EAE7G,GAAID,EAAY,SAAW,EAIzB,OAAOE,EAAAA,IAAC,MAAA,CAAI,UAAW,eAAeR,CAAS,GAAI,MAAO,CAAE,UAAW,GAAA,EAAO,SAAA,WAAQ,EAGxF,MAAMS,EAAO,IAAMN,MAAaO,EAAI,GAAKJ,EAAY,MAAM,EACrDK,EAAO,IAAMR,EAAOO,IAAMA,EAAI,EAAIJ,EAAY,QAAUA,EAAY,MAAM,EAG1EM,EAAoBC,GAAwB,CAChD,MAAMC,EAAcD,EAAE,QAAQ,CAAC,EAAE,QAE3BE,EAAmBC,GAA0B,CACjD,MAAMC,EAAaD,EAAU,QAAQ,CAAC,EAAE,QAClCE,EAAOJ,EAAcG,EAGvB,KAAK,IAAIC,CAAI,EAAI,KACfA,EAAO,EACTT,EAAA,EAEAE,EAAA,EAIF,SAAS,oBAAoB,YAAaI,CAAe,EACzD,SAAS,oBAAoB,WAAYI,CAAc,EAE3D,EAEMA,EAAiB,IAAM,CAC3B,SAAS,oBAAoB,YAAaJ,CAAe,EACzD,SAAS,oBAAoB,WAAYI,CAAc,CACzD,EAGA,SAAS,iBAAiB,YAAaJ,EAAiB,CAAE,QAAS,GAAO,EAC1E,SAAS,iBAAiB,WAAYI,EAAgB,CAAE,QAAS,GAAO,CAC1E,EAEA,cACG,MAAA,CAAI,UAAW,YAAYnB,CAAS,GAAI,aAAcY,EACrD,SAAA,CAAAJ,EAAAA,IAACY,EAAA,CACC,IAAKd,EAAYJ,CAAG,EACpB,IAAK,aAAaA,EAAM,CAAC,GACzB,UAAU,0CAAA,CAAA,EAEXI,EAAY,OAAS,GACpBe,EAAAA,KAAAC,EAAAA,SAAA,CACE,SAAA,CAAAd,EAAAA,IAAC,SAAA,CACC,QAASG,EACT,aAAW,WACX,UAAU,iJAEV,eAAC,OAAA,CAAK,UAAU,+CAA+C,SAAA,IAAC,CAAA,CAAA,EAElEH,EAAAA,IAAC,SAAA,CACC,QAASC,EACT,aAAW,OACX,UAAU,kJAEV,eAAC,OAAA,CAAK,UAAU,+CAA+C,SAAA,IAAC,CAAA,CAAA,EAElED,EAAAA,IAAC,OAAI,UAAU,0CACZ,WAAY,IAAI,CAACe,EAAGb,IACnBF,EAAAA,IAAC,SAAA,CAEC,QAAS,IAAML,EAAOO,CAAC,EACvB,UAAW,qDAAqDA,IAAMR,EAAM,uBAAyB,aAAa,GAClH,aAAY,eAAeQ,EAAI,CAAC,EAAA,EAH3BA,CAAA,CAKR,EACH,CAAA,EACF,EAEDL,CAGC,EAEJ,CAEJ"}