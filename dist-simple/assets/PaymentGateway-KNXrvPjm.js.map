{"version":3,"file":"PaymentGateway-KNXrvPjm.js","sources":["../../node_modules/lucide-react/dist/esm/icons/credit-card.js","../../src/components/PaymentGateway.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst CreditCard = createLucideIcon(\"CreditCard\", [\n  [\"rect\", { width: \"20\", height: \"14\", x: \"2\", y: \"5\", rx: \"2\", key: \"ynyp8z\" }],\n  [\"line\", { x1: \"2\", x2: \"22\", y1: \"10\", y2: \"10\", key: \"1b3vmo\" }]\n]);\n\nexport { CreditCard as default };\n//# sourceMappingURL=credit-card.js.map\n","import React, { useState } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { CreditCard, Shield, Check, X, Loader2 } from 'lucide-react';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Separator } from '@/components/ui/separator';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from '@/components/ui/dialog';\r\nimport { supabase } from '@/integrations/supabase/client';\r\nimport { useAuth } from '@/components/AuthProvider';\r\nimport { toast } from '@/hooks/use-toast';\r\n\r\ndeclare global {\r\n  interface Window {\r\n    Razorpay: {\r\n      new (options: unknown): {\r\n        open: () => void;\r\n      };\r\n    };\r\n  }\r\n}\r\n\r\ninterface PaymentGatewayProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  bookingData: {\r\n    carId: string;\r\n    carTitle: string;\r\n    carImage: string;\r\n    startDate: string;\r\n    endDate: string;\r\n    startTime: string;\r\n    endTime: string;\r\n    duration: {\r\n      hours: number;\r\n      days: number;\r\n      billingHours: number;\r\n    };\r\n    subtotal: number;\r\n    serviceCharge: number;\r\n    total: number;\r\n  };\r\n  onSuccess: (bookingId: string) => void;\r\n}\r\n\r\nexport const PaymentGateway: React.FC<PaymentGatewayProps> = ({\r\n  isOpen,\r\n  onClose,\r\n  bookingData,\r\n  onSuccess,\r\n}) => {\r\n  const { user } = useAuth();\r\n  const [selectedGateway, setSelectedGateway] = useState<'razorpay' | 'stripe'>('razorpay');\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const [paymentStep, setPaymentStep] = useState<'details' | 'processing' | 'success' | 'failed'>('details');\r\n  const [_bookingId, setBookingId] = useState<string | null>(null);\r\n\r\n  const createBooking = async () => {\r\n    try {\r\n      const startDateTime = new Date(`${bookingData.startDate}T${bookingData.startTime}:00`);\r\n      const endDateTime = new Date(`${bookingData.endDate}T${bookingData.endTime}:00`);\r\n\r\n      const { data, error } = await (supabase\r\n        .from('bookings') as any)\r\n        .insert({\r\n          user_id: user?.id,\r\n          car_id: bookingData.carId,\r\n          start_datetime: startDateTime.toISOString(),\r\n          end_datetime: endDateTime.toISOString(),\r\n          total_amount: bookingData.total,\r\n          status: 'pending'\r\n        })\r\n        .select()\r\n        .single();\r\n\r\n      if (error) {throw error;}\r\n      return (data as any).id;\r\n    } catch (_error) {\r\n      console.error('Booking creation error:', _error);\r\n      throw _error;\r\n    }\r\n  };\r\n\r\n  const loadRazorpayScript = () => {\r\n    return new Promise((resolve, reject) => {\r\n      if (window.Razorpay) {\r\n        resolve(true);\r\n        return;\r\n      }\r\n\r\n      const script = document.createElement('script');\r\n      script.src = 'https://checkout.razorpay.com/v1/checkout.js';\r\n      script.onload = () => resolve(true);\r\n      script.onerror = () => reject(false);\r\n      document.body.appendChild(script);\r\n    });\r\n  };\r\n\r\n  const processRazorpayPayment = async (bookingId: string) => {\r\n    try {\r\n      await loadRazorpayScript();\r\n\r\n      const { data: { session }, error } = await supabase.functions.invoke('create-payment', {\r\n        body: {\r\n          bookingId,\r\n          gateway: 'razorpay',\r\n          amount: bookingData.total\r\n        }\r\n      });\r\n\r\n      if (error) {throw error;}\r\n\r\n      const options = {\r\n        key: import.meta.env.VITE_RAZORPAY_KEY_ID || 'rzp_test_11111111111111', // Demo key\r\n        amount: bookingData.total * 100, // Amount in paise\r\n        currency: 'INR',\r\n        name: 'Azure Drive Hub',\r\n        description: `Car Rental: ${bookingData.carTitle}`,\r\n        image: '/logo.png',\r\n        order_id: session.sessionId,\r\n        handler: async (response: { razorpay_payment_id: string }) => {\r\n          try {\r\n            // Confirm payment on backend\r\n            const { error: confirmError } = await supabase.functions.invoke('confirm-payment', {\r\n              body: {\r\n                payment_intent_id: response.razorpay_payment_id,\r\n                status: 'succeeded'\r\n              }\r\n            });\r\n\r\n            if (confirmError) {throw confirmError;}\r\n\r\n            setPaymentStep('success');\r\n            setTimeout(() => {\r\n              onSuccess(bookingId);\r\n              onClose();\r\n            }, 2000);\r\n          } catch (error) {\r\n            console.error('Payment confirmation error:', error);\r\n            setPaymentStep('failed');\r\n          }\r\n        },\r\n        prefill: {\r\n          name: user?.user_metadata?.full_name || '',\r\n          email: user?.email || '',\r\n          contact: user?.user_metadata?.phone || ''\r\n        },\r\n        notes: {\r\n          booking_id: bookingId,\r\n          car_id: bookingData.carId\r\n        },\r\n        theme: {\r\n          color: '#3366FF'\r\n        },\r\n        modal: {\r\n          ondismiss: () => {\r\n            setIsProcessing(false);\r\n            setPaymentStep('details');\r\n          }\r\n        }\r\n      };\r\n\r\n      const rzp = new window.Razorpay(options);\r\n      rzp.open();\r\n    } catch (error) {\r\n      console.error('Razorpay payment error:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const processStripePayment = async (bookingId: string) => {\r\n    try {\r\n      const { data, error } = await supabase.functions.invoke('create-payment-intent', {\r\n        body: {\r\n          bookingId,\r\n          gateway: 'stripe'\r\n        }\r\n      });\r\n\r\n      if (error) {throw error;}\r\n\r\n      // For demo purposes, simulate successful payment\r\n      setTimeout(async () => {\r\n        try {\r\n          const { error: confirmError } = await supabase.functions.invoke('confirm-payment', {\r\n            body: {\r\n              payment_intent_id: data.payment_intent_id,\r\n              status: 'succeeded'\r\n            }\r\n          });\r\n\r\n          if (confirmError) {throw confirmError;}\r\n\r\n          setPaymentStep('success');\r\n          setTimeout(() => {\r\n            onSuccess(bookingId);\r\n            onClose();\r\n          }, 2000);\r\n        } catch (error) {\r\n          console.error('Payment confirmation error:', error);\r\n          setPaymentStep('failed');\r\n        }\r\n      }, 3000);\r\n    } catch (error) {\r\n      console.error('Stripe payment error:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const handlePayment = async () => {\r\n    if (!user) {\r\n      toast({\r\n        title: \"Authentication Required\",\r\n        description: \"Please sign in to complete your booking\",\r\n        variant: \"destructive\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setIsProcessing(true);\r\n      setPaymentStep('processing');\r\n\r\n      // Create booking first\r\n      const newBookingId = await createBooking();\r\n      setBookingId(newBookingId);\r\n\r\n      // Process payment based on selected gateway\r\n      if (selectedGateway === 'razorpay') {\r\n        await processRazorpayPayment(newBookingId);\r\n      } else {\r\n        await processStripePayment(newBookingId);\r\n      }\r\n    } catch (error) {\r\n      console.error('Payment processing error:', error);\r\n      setPaymentStep('failed');\r\n      toast({\r\n        title: \"Payment Failed\",\r\n        description: \"There was an error processing your payment. Please try again.\",\r\n        variant: \"destructive\",\r\n      });\r\n    } finally {\r\n      setIsProcessing(false);\r\n    }\r\n  };\r\n\r\n  const renderPaymentForm = () => (\r\n    <div className=\"space-y-6\">\r\n      {/* Gateway Selection */}\r\n      <div className=\"space-y-3\">\r\n        <Label className=\"text-base font-semibold\">Select Payment Method</Label>\r\n        <div className=\"grid grid-cols-2 gap-3\">\r\n          <Card \r\n            className={`cursor-pointer transition-all ${selectedGateway === 'razorpay' ? 'ring-2 ring-primary bg-primary/5' : 'hover:bg-muted/50'}`}\r\n            onClick={() => setSelectedGateway('razorpay')}\r\n          >\r\n            <CardContent className=\"p-4 text-center\">\r\n              <div className=\"space-y-2\">\r\n                <div className=\"w-12 h-12 mx-auto bg-blue-100 rounded-lg flex items-center justify-center\">\r\n                  <CreditCard className=\"w-6 h-6 text-blue-600\" />\r\n                </div>\r\n                <h3 className=\"font-semibold\">Razorpay</h3>\r\n                <p className=\"text-xs text-muted-foreground\">UPI, Cards, Net Banking</p>\r\n                {selectedGateway === 'razorpay' && (\r\n                  <Badge className=\"bg-primary text-primary-foreground\">\r\n                    <Check className=\"w-3 h-3 mr-1\" />\r\n                    Selected\r\n                  </Badge>\r\n                )}\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card \r\n            className={`cursor-pointer transition-all ${selectedGateway === 'stripe' ? 'ring-2 ring-primary bg-primary/5' : 'hover:bg-muted/50'}`}\r\n            onClick={() => setSelectedGateway('stripe')}\r\n          >\r\n            <CardContent className=\"p-4 text-center\">\r\n              <div className=\"space-y-2\">\r\n                <div className=\"w-12 h-12 mx-auto bg-purple-100 rounded-lg flex items-center justify-center\">\r\n                  <Shield className=\"w-6 h-6 text-purple-600\" />\r\n                </div>\r\n                <h3 className=\"font-semibold\">Stripe</h3>\r\n                <p className=\"text-xs text-muted-foreground\">International Cards</p>\r\n                {selectedGateway === 'stripe' && (\r\n                  <Badge className=\"bg-primary text-primary-foreground\">\r\n                    <Check className=\"w-3 h-3 mr-1\" />\r\n                    Selected\r\n                  </Badge>\r\n                )}\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Booking Summary */}\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle className=\"text-lg\">Booking Summary</CardTitle>\r\n        </CardHeader>\r\n        <CardContent className=\"space-y-4\">\r\n          <div className=\"flex gap-4\">\r\n            <img\r\n              src={bookingData.carImage}\r\n              alt={bookingData.carTitle}\r\n              className=\"w-20 h-16 object-cover rounded-lg\"\r\n            />\r\n            <div className=\"flex-1\">\r\n              <h3 className=\"font-semibold\">{bookingData.carTitle}</h3>\r\n              <p className=\"text-sm text-muted-foreground\">\r\n                {bookingData.startDate} {bookingData.startTime} → {bookingData.endDate} {bookingData.endTime}\r\n              </p>\r\n              <p className=\"text-sm text-primary font-medium\">\r\n                {bookingData.duration.billingHours} hours ({bookingData.duration.days} day{bookingData.duration.days !== 1 ? 's' : ''})\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n          <Separator />\r\n\r\n          <div className=\"space-y-2 text-sm\">\r\n            <div className=\"flex justify-between\">\r\n              <span>Subtotal</span>\r\n              <span>₹{bookingData.subtotal.toLocaleString()}</span>\r\n            </div>\r\n            {bookingData.serviceCharge > 0 && (\r\n              <div className=\"flex justify-between\">\r\n                <span>Service Charge</span>\r\n                <span>₹{bookingData.serviceCharge.toLocaleString()}</span>\r\n              </div>\r\n            )}\r\n            <Separator />\r\n            <div className=\"flex justify-between font-semibold text-lg\">\r\n              <span>Total</span>\r\n              <span className=\"text-primary\">₹{bookingData.total.toLocaleString()}</span>\r\n            </div>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Payment Instructions */}\r\n      <Card className=\"border-dashed border-primary/30\">\r\n        <CardContent className=\"p-4\">\r\n          <div className=\"flex items-start gap-3\">\r\n            <div className=\"w-8 h-8 bg-primary/10 rounded-full flex items-center justify-center flex-shrink-0\">\r\n              <Shield className=\"w-4 h-4 text-primary\" />\r\n            </div>\r\n            <div className=\"text-sm\">\r\n              <h4 className=\"font-medium text-primary mb-1\">Secure Payment Process</h4>\r\n              <ul className=\"text-muted-foreground space-y-1 text-xs\">\r\n                <li>• Click \"Pay Now\" to proceed to {selectedGateway === 'razorpay' ? 'Razorpay' : 'Stripe'} secure checkout</li>\r\n                <li>• Your booking will be confirmed after successful payment</li>\r\n                <li>• You'll receive confirmation details via email</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Payment Actions */}\r\n      <div className=\"space-y-4\">\r\n        {/* Clear Payment Method Selection */}\r\n        <div className=\"p-3 bg-primary/5 border border-primary/20 rounded-lg\">\r\n          <div className=\"flex items-center gap-2 text-sm text-primary\">\r\n            <Check className=\"w-4 h-4\" />\r\n            <span className=\"font-medium\">\r\n              {selectedGateway === 'razorpay' ? 'Razorpay' : 'Stripe'} selected\r\n            </span>\r\n          </div>\r\n          <p className=\"text-xs text-muted-foreground mt-1\">\r\n            {selectedGateway === 'razorpay' \r\n              ? 'UPI, Cards, Net Banking & Wallets available'\r\n              : 'International cards accepted'\r\n            }\r\n          </p>\r\n        </div>\r\n        \r\n        {/* Action Buttons */}\r\n        <div className=\"flex gap-3\">\r\n          <Button\r\n            variant=\"outline\"\r\n            onClick={onClose}\r\n            className=\"flex-1\"\r\n            disabled={isProcessing}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            onClick={handlePayment}\r\n            className=\"flex-1 bg-gradient-to-r from-primary to-primary-dark hover:from-primary-dark hover:to-primary text-white font-semibold py-2 px-6 shadow-lg hover:shadow-xl transition-all duration-200\"\r\n            disabled={isProcessing}\r\n            size=\"lg\"\r\n          >\r\n            {isProcessing ? (\r\n              <>\r\n                <Loader2 className=\"w-5 h-5 mr-2 animate-spin\" />\r\n                Processing...\r\n              </>\r\n            ) : (\r\n              <>\r\n                <CreditCard className=\"w-5 h-5 mr-2\" />\r\n                Pay Now ₹{bookingData.total.toLocaleString()}\r\n              </>\r\n            )}\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderProcessingState = () => (\r\n    <div className=\"text-center py-12\">\r\n      <motion.div\r\n        animate={{ rotate: 360 }}\r\n        transition={{ duration: 1, repeat: Infinity, ease: \"linear\" }}\r\n        className=\"w-16 h-16 border-4 border-primary border-t-transparent rounded-full mx-auto mb-4\"\r\n      />\r\n      <h3 className=\"text-xl font-semibold mb-2\">Processing Payment</h3>\r\n      <p className=\"text-muted-foreground\">Please do not close this window...</p>\r\n    </div>\r\n  );\r\n\r\n  const renderSuccessState = () => (\r\n    <div className=\"text-center py-12\">\r\n      <motion.div\r\n        initial={{ scale: 0 }}\r\n        animate={{ scale: 1 }}\r\n        className=\"w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-4\"\r\n      >\r\n        <Check className=\"w-8 h-8 text-green-600\" />\r\n      </motion.div>\r\n      <h3 className=\"text-xl font-semibold mb-2 text-green-600\">Payment Successful!</h3>\r\n      <p className=\"text-muted-foreground\">Your booking has been confirmed. Redirecting...</p>\r\n    </div>\r\n  );\r\n\r\n  const renderFailedState = () => (\r\n    <div className=\"text-center py-12\">\r\n      <motion.div\r\n        initial={{ scale: 0 }}\r\n        animate={{ scale: 1 }}\r\n        className=\"w-16 h-16 bg-red-100 rounded-full flex items-center justify-center mx-auto mb-4\"\r\n      >\r\n        <X className=\"w-8 h-8 text-red-600\" />\r\n      </motion.div>\r\n      <h3 className=\"text-xl font-semibold mb-2 text-red-600\">Payment Failed</h3>\r\n      <p className=\"text-muted-foreground mb-4\">There was an issue processing your payment</p>\r\n      <Button\r\n        onClick={() => {\r\n          setPaymentStep('details');\r\n          setIsProcessing(false);\r\n        }}\r\n      >\r\n        Try Again\r\n      </Button>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Dialog open={isOpen} onOpenChange={onClose}>\r\n      <DialogContent className=\"sm:max-w-md\">\r\n        <DialogHeader>\r\n          <DialogTitle className=\"flex items-center gap-2\">\r\n            <CreditCard className=\"w-5 h-5\" />\r\n            Complete Payment\r\n          </DialogTitle>\r\n        </DialogHeader>\r\n\r\n        {paymentStep === 'details' && renderPaymentForm()}\r\n        {paymentStep === 'processing' && renderProcessingState()}\r\n        {paymentStep === 'success' && renderSuccessState()}\r\n        {paymentStep === 'failed' && renderFailedState()}\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};"],"names":["CreditCard","createLucideIcon","PaymentGateway","isOpen","onClose","bookingData","onSuccess","user","useAuth","selectedGateway","setSelectedGateway","useState","isProcessing","setIsProcessing","paymentStep","setPaymentStep","_bookingId","setBookingId","createBooking","startDateTime","endDateTime","data","error","supabase","_error","loadRazorpayScript","resolve","reject","script","processRazorpayPayment","bookingId","session","options","response","confirmError","processStripePayment","handlePayment","toast","newBookingId","renderPaymentForm","jsxs","Label","jsx","Card","CardContent","Badge","Check","Shield","CardHeader","CardTitle","Separator","Button","Fragment","Loader2","renderProcessingState","motion","renderSuccessState","renderFailedState","X","Dialog","DialogContent","DialogHeader","DialogTitle"],"mappings":"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","x_google_ignoreList":[0]}